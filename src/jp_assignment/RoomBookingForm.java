/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jp_assignment;

import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.Scanner;
import java.util.concurrent.TimeUnit;
import javax.swing.JOptionPane;

/**
 *
 * @author Carl
 */
public class RoomBookingForm extends javax.swing.JFrame {

    /**
     * Creates new form RoomBookingForm
     */
    public RoomBookingForm() {
        initComponents();
        
    Date date = new Date();
//    iptCheckInDate.getDayChooser().setMinSelectableDate(date);
    iptCheckInDate.getJCalendar().setMinSelectableDate(date);
    iptCheckOutDate.getJCalendar().setMinSelectableDate(date);

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgPanel = new javax.swing.JPanel();
        lblCustomerDetail = new javax.swing.JLabel();
        lblCustomerIC = new javax.swing.JLabel();
        lblCustomerName = new javax.swing.JLabel();
        lblEmailAddress = new javax.swing.JLabel();
        lblContactNumber = new javax.swing.JLabel();
        iptGuestName = new javax.swing.JTextField();
        iptIdentityNumber = new javax.swing.JTextField();
        iptContactNumber = new javax.swing.JTextField();
        iptEmailAddress = new javax.swing.JTextField();
        iptRoomNumber = new javax.swing.JTextField();
        lblPaymentPreview = new javax.swing.JLabel();
        lblRoomNumber = new javax.swing.JLabel();
        iptCheckInDate = new com.toedter.calendar.JDateChooser();
        lblCheckIn = new javax.swing.JLabel();
        iptCheckOutDate = new com.toedter.calendar.JDateChooser();
        lblCheckOut = new javax.swing.JLabel();
        btnBook = new javax.swing.JButton();
        lblCustomerIDType = new javax.swing.JLabel();
        lblBookingDetails = new javax.swing.JLabel();
        lblRemarks = new javax.swing.JLabel();
        iptRemarksPanel = new javax.swing.JScrollPane();
        inpRemarks = new javax.swing.JTextArea();
        lblSeviceTax = new javax.swing.JLabel();
        lblDOS = new javax.swing.JLabel();
        iptDOS = new javax.swing.JTextField();
        iptPricePerNight = new javax.swing.JTextField();
        lblPricePerNight = new javax.swing.JLabel();
        lblTourismTax = new javax.swing.JLabel();
        lblTotalPrice = new javax.swing.JLabel();
        iptTotalPrice = new javax.swing.JTextField();
        iptTourismTax = new javax.swing.JTextField();
        iptServiceTax = new javax.swing.JTextField();
        iptIdentidyCardType = new javax.swing.JComboBox<>();
        btnReturnAvailableRoom = new javax.swing.JButton();
        btnPreview = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Room Booking Form");

        bgPanel.setBackground(new java.awt.Color(229, 238, 254));
        bgPanel.setPreferredSize(new java.awt.Dimension(1400, 650));
        bgPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCustomerDetail.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        lblCustomerDetail.setForeground(new java.awt.Color(0, 102, 255));
        lblCustomerDetail.setText("Customer Details");
        bgPanel.add(lblCustomerDetail, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 220, 50));

        lblCustomerIC.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        lblCustomerIC.setForeground(new java.awt.Color(0, 102, 255));
        lblCustomerIC.setText("IC/ Passport");
        bgPanel.add(lblCustomerIC, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 440, -1, -1));

        lblCustomerName.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        lblCustomerName.setForeground(new java.awt.Color(0, 102, 255));
        lblCustomerName.setText("Guest Name");
        bgPanel.add(lblCustomerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, -1, -1));

        lblEmailAddress.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        lblEmailAddress.setForeground(new java.awt.Color(0, 102, 255));
        lblEmailAddress.setText("Email Address");
        bgPanel.add(lblEmailAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        lblContactNumber.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        lblContactNumber.setForeground(new java.awt.Color(0, 102, 255));
        lblContactNumber.setText("Contact Number");
        bgPanel.add(lblContactNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, -1, -1));

        iptGuestName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iptGuestNameActionPerformed(evt);
            }
        });
        bgPanel.add(iptGuestName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 200, 250, 40));
        bgPanel.add(iptIdentityNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 440, 250, 40));

        iptContactNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iptContactNumberActionPerformed(evt);
            }
        });
        iptContactNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                iptContactNumberKeyPressed(evt);
            }
        });
        bgPanel.add(iptContactNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 320, 250, 40));
        bgPanel.add(iptEmailAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 260, 250, 40));
        bgPanel.add(iptRoomNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 190, 250, 40));

        lblPaymentPreview.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        lblPaymentPreview.setForeground(new java.awt.Color(0, 102, 255));
        lblPaymentPreview.setText("Payment Preview");
        bgPanel.add(lblPaymentPreview, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 150, -1, 30));

        lblRoomNumber.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        lblRoomNumber.setForeground(new java.awt.Color(0, 102, 255));
        lblRoomNumber.setText("Room Number");
        bgPanel.add(lblRoomNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 200, -1, -1));
        bgPanel.add(iptCheckInDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 250, 250, 40));

        lblCheckIn.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        lblCheckIn.setForeground(new java.awt.Color(0, 102, 255));
        lblCheckIn.setText("Check In date");
        bgPanel.add(lblCheckIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 260, -1, -1));
        bgPanel.add(iptCheckOutDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 310, 250, 40));

        lblCheckOut.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        lblCheckOut.setForeground(new java.awt.Color(0, 102, 255));
        lblCheckOut.setText("Check Out date");
        bgPanel.add(lblCheckOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 320, -1, -1));

        btnBook.setText("Book");
        btnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookActionPerformed(evt);
            }
        });
        bgPanel.add(btnBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 490, 110, 50));

        lblCustomerIDType.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        lblCustomerIDType.setForeground(new java.awt.Color(0, 102, 255));
        lblCustomerIDType.setText("ID Card");
        bgPanel.add(lblCustomerIDType, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, -1, -1));

        lblBookingDetails.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        lblBookingDetails.setForeground(new java.awt.Color(0, 102, 255));
        lblBookingDetails.setText("Booking Details");
        bgPanel.add(lblBookingDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 150, -1, 30));

        lblRemarks.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        lblRemarks.setForeground(new java.awt.Color(0, 102, 255));
        lblRemarks.setText("Additional Remarks");
        bgPanel.add(lblRemarks, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 380, 160, -1));

        inpRemarks.setColumns(20);
        inpRemarks.setRows(5);
        iptRemarksPanel.setViewportView(inpRemarks);

        bgPanel.add(iptRemarksPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 370, 250, 100));

        lblSeviceTax.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        lblSeviceTax.setForeground(new java.awt.Color(0, 102, 255));
        lblSeviceTax.setText("Service Tax");
        bgPanel.add(lblSeviceTax, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 320, 90, -1));

        lblDOS.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        lblDOS.setForeground(new java.awt.Color(0, 102, 255));
        lblDOS.setText("Days of Stay");
        bgPanel.add(lblDOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 200, 120, -1));

        iptDOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iptDOSActionPerformed(evt);
            }
        });
        bgPanel.add(iptDOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 190, 250, 40));
        bgPanel.add(iptPricePerNight, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 250, 250, 40));

        lblPricePerNight.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        lblPricePerNight.setForeground(new java.awt.Color(0, 102, 255));
        lblPricePerNight.setText("Price (Per Night) ");
        bgPanel.add(lblPricePerNight, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 260, -1, -1));

        lblTourismTax.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        lblTourismTax.setForeground(new java.awt.Color(0, 102, 255));
        lblTourismTax.setText("Tourism Tax");
        bgPanel.add(lblTourismTax, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 380, 100, -1));

        lblTotalPrice.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        lblTotalPrice.setForeground(new java.awt.Color(0, 102, 255));
        lblTotalPrice.setText("Total Price");
        bgPanel.add(lblTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 440, -1, -1));

        iptTotalPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iptTotalPriceActionPerformed(evt);
            }
        });
        bgPanel.add(iptTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 430, 250, 40));
        bgPanel.add(iptTourismTax, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 370, 250, 40));
        bgPanel.add(iptServiceTax, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 310, 250, 40));

        iptIdentidyCardType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Identity Card (IC)", "Passport" }));
        bgPanel.add(iptIdentidyCardType, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, 250, 40));

        btnReturnAvailableRoom.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        btnReturnAvailableRoom.setText("Available Room");
        btnReturnAvailableRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnAvailableRoomActionPerformed(evt);
            }
        });
        bgPanel.add(btnReturnAvailableRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, 110, 50));

        btnPreview.setText("Preview");
        btnPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviewActionPerformed(evt);
            }
        });
        bgPanel.add(btnPreview, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 490, 110, 50));

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        bgPanel.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 490, 110, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1380, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void iptGuestNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iptGuestNameActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_iptGuestNameActionPerformed

    private void btnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookActionPerformed
        // TODO add your handling code here:



//      Get Data - Guest Details 
        String guestName, identityNumber, contactNumber, emailAddress, 
                identidyCardType,roomNumber, addtionalRemarks, status, serviceTax, tourismTax;
        guestName = iptGuestName.getText();
        identidyCardType = iptIdentidyCardType.getSelectedItem().toString();
        identityNumber = iptIdentityNumber.getText();
        contactNumber = iptContactNumber.getText();
        emailAddress = iptEmailAddress.getText();
        
//      Get Data - Room Details
        roomNumber = iptRoomNumber.getText();
        SimpleDateFormat df = new SimpleDateFormat("dd-MMM-yyyy");
        Date collectedCheckInDate = iptCheckInDate.getDate();
        Date collectedCheckOutDate = iptCheckOutDate.getDate();
        addtionalRemarks = inpRemarks.getText();
        
//      Get Date - Payment Detail 
        String dayOfStay, totalPrice; 
        dayOfStay = iptDOS.getText();
        totalPrice = iptTotalPrice.getText();
        status = "NA";
        serviceTax = iptServiceTax.getText();
        tourismTax = iptTourismTax.getText();
        
    
   
        
        
        try {
            
            
      
            
            Validation emailVal = new Validation();
            boolean emailValidation = emailVal.emailAddressValidation(emailAddress);
      
            if (emailValidation == true)
            {
                
                Validation roomValidation = new Validation();
                boolean checkRoomAvailability = roomValidation.roomAvailable(roomNumber);
                System.out.println(emailValidation);
                
//                Validation passportVal = new Validation();
//                boolean checkPassport = passportVal.passportValidation(identityNumber);
//   
                       
                if (checkRoomAvailability == true)
                {
                   String checkInDate = df.format(collectedCheckInDate);
                   String checkOutDate = df.format(collectedCheckOutDate);
                   
                    BufferedWriter bw = new BufferedWriter(new FileWriter("C:\\Users\\Carl\\Documents\\NetBeansProjects\\"
                            + "JP_Assignment\\src\\jp_assignment\\Database\\BookingDetails.txt", true));
                    bw.write(roomNumber + "," + guestName + "," + identidyCardType + "," + 
                            identityNumber+ "," + contactNumber + "," + emailAddress + "," + checkInDate + "," + 
                            checkOutDate +  "," + addtionalRemarks + "," + dayOfStay  + "," + status+ "," + serviceTax +
                            "," + tourismTax+ ","  +totalPrice+ "\n");
                    
                    ActionClass ac = new ActionClass();
                    ac.showValidMessage("Room Has Booked");
                    bw.close();
                    
                    
                    
                    //  Changed status to unavailable 
            String searchRoomNumber, roomStatus ,filePath, line; 
            searchRoomNumber = iptRoomNumber.getText();
            roomStatus = "Reserved";
            filePath = "C:\\Users\\Carl\\Documents\\NetBeansProjects\\JP_Assignment\\src\\jp_assignment\\Database\\Rooms.txt";

            ArrayList<String> tempArray = new ArrayList<>();
            try 
            {
                try (FileReader fr = new FileReader(filePath) )
                {
                    Scanner reader = new Scanner(fr);
                    String[] lineArr;

                    while ((line = reader.nextLine()) != null)
                    {
                        lineArr = line.split(",");
                        if (lineArr[0].equals(searchRoomNumber))
                        {
                            tempArray.add
                            (
                                lineArr[0] + "," +                          
                                lineArr[1] + "," +
                                roomStatus);
                        }
                        else
                        {
                            tempArray.add(line);
                        }
                        fr.close();
                    }
                }
                catch (Exception e)
                {

                }
            }catch (Exception e)
            {

            }

            try 
            {
                try (PrintWriter pr = new PrintWriter(filePath))
                {
                    for (String str : tempArray )
                    {
                        pr.println(str);
                    }
                    pr.close();
                }
            }
            catch (Exception e)
            {

            }

                }
                else 
                {
                    ActionClass ac = new ActionClass();
                ac.showInvalidMessage("Select Room is Occupied");
                }
            }
            
            else 
            {
               ActionClass ac = new ActionClass();
                ac.showInvalidMessage("Invalid Email Address");
            }
            
            // add data into BookingDetails.txt
            //JOptionPane.showMessageDialog(null, "Room Successfully Booked", "Success: " + "Booking Form", JOptionPane.INFORMATION_MESSAGE);

            //  find the specifc room 
        } catch (Exception e) {
            ActionClass ac = new ActionClass();
            ac.showInvalidMessage("Room Not Booked");
        }

        
        
        
//        //      Changed status to unavailable 
//        String searchRoomNumber, roomStatus ,filePath, line; 
//        searchRoomNumber = iptRoomNumber.getText();
//        roomStatus = "Reserved";
//        filePath = "C:\\Users\\Carl\\Documents\\NetBeansProjects\\JP_Assignment\\src\\jp_assignment\\Database\\Rooms.txt";
//        
//        ArrayList<String> tempArray = new ArrayList<>();
//        try 
//        {
//            try (FileReader fr = new FileReader(filePath) )
//            {
//                Scanner reader = new Scanner(fr);
//                String[] lineArr;
//                
//                while ((line = reader.nextLine()) != null)
//                {
//                    lineArr = line.split(",");
//                    if (lineArr[0].equals(searchRoomNumber))
//                    {
//                        tempArray.add
//                        (
//                            lineArr[0] + "," +                          
//                            lineArr[1] + "," +
//                            roomStatus);
//                       
//                             
//                    }
//                    else
//                    {
//                        tempArray.add(line);
//                        
//                    }
//                    fr.close();
//                }
//            }
//            catch (Exception e)
//            {
//                
//            }
//        }catch (Exception e)
//        {
//            
//        }
//        
//        try 
//        {
//            try (PrintWriter pr = new PrintWriter(filePath))
//            {
//                for (String str : tempArray )
//                {
//                    pr.println(str);
//                }
//                pr.close();
//            }
//        }
//        catch (Exception e)
//        {
//            
//        }
        
    }//GEN-LAST:event_btnBookActionPerformed

    private void iptTotalPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iptTotalPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iptTotalPriceActionPerformed

    private void btnReturnAvailableRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnAvailableRoomActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        AvailableRooms ar = new AvailableRooms();
        ar.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnReturnAvailableRoomActionPerformed

    private void btnPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviewActionPerformed
        // TODO add your handling code here:

        int pricePerNight = 350;
        this.iptPricePerNight.setText(" RM " + pricePerNight);

        SimpleDateFormat df = new SimpleDateFormat("dd-MMM-yyyy", Locale.ENGLISH);
        Date collectedCheckInDate = iptCheckInDate.getDate();
        Date collectedCheckOutDate = iptCheckOutDate.getDate();
        
        
          try 
          {
                long covertToMillies = Math.abs(collectedCheckInDate.getTime() - collectedCheckOutDate.getTime());
                long daysOfStay = TimeUnit.DAYS.convert(covertToMillies, TimeUnit.MILLISECONDS) + 1;
                long nightOfStay = daysOfStay - 1;
                
                if (daysOfStay == 1)
                {
                    
                    
                    this.iptDOS.setText(daysOfStay + " Days " + nightOfStay + " Night "  );
                }
                else 
                {
              
                    this.iptDOS.setText(daysOfStay + " Days " + nightOfStay + " Nights "  );
                }
                    
                double roomPrice = nightOfStay * 350;
                double serviceTax = (nightOfStay * 350) * 0.10; 
                System.out.println(serviceTax);
                long tourismTax = nightOfStay * 10;
                double totalPrice = roomPrice + serviceTax + tourismTax; 
                
                
                String roomPriceToString = " RM " + serviceTax;
                String tourismTaxToString = " RM " + tourismTax;
                String totalPriceToString = " RM " + totalPrice;

                
                this.iptServiceTax.setText(roomPriceToString);
                this.iptTourismTax.setText(tourismTaxToString);
                this.iptTotalPrice.setText(totalPriceToString);

                
                     
          }
          catch (Exception e) 
          {
            e.printStackTrace();
        }

        

        


    }//GEN-LAST:event_btnPreviewActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:

        // Clear form
        // Guest Details
        this.iptGuestName.setText("");
        this.iptIdentityNumber.setText("");
        this.iptContactNumber.setText("");
        this.iptEmailAddress.setText("");

        // Booking Details
        this.iptRoomNumber.setText("");

        // clearing date (not working)
//        this.iptCheckInDate.getJFormattedTextField().setText("");
//        this.iptCheckOutDate.getJFormattedTextField().setText("");
        this.inpRemarks.setText("");

        // payment preview 
        this.iptDOS.setText("");
        this.iptPricePerNight.setText("");
        this.iptServiceTax.setText("");
        this.iptTourismTax.setText("");
        this.iptTotalPrice.setText("");

        this.iptContactNumber.setText("");
        this.iptEmailAddress.setText("");

//        roomNumber = iptRoomNumber.getText();
    }//GEN-LAST:event_btnClearActionPerformed

    private void iptDOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iptDOSActionPerformed
        // TODO add your handling code here:
        Date collectedCheckInDate = iptCheckInDate.getDate();
        Date collectedCheckOutDate = iptCheckOutDate.getDate();
    }//GEN-LAST:event_iptDOSActionPerformed

    private void iptContactNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iptContactNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iptContactNumberActionPerformed

    private void iptContactNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iptContactNumberKeyPressed
        // TODO add your handling code here:
        String contactNumber = iptContactNumber.getText();
        int length = contactNumber.length();
        char c = evt.getKeyChar();
        
        
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9')
        {
            if (length < 10)
            {
                iptContactNumber.setEditable(true);
            }
            else 
            {
                iptContactNumber.setEditable(false);
            }
        }
        else 
        {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE ||evt.getExtendedKeyCode() == KeyEvent.VK_DELETE)
            {
               iptContactNumber.setEditable(true);

            }
            else
            {
               iptContactNumber.setEditable(false);

            }
        }
    }//GEN-LAST:event_iptContactNumberKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomBookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomBookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomBookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomBookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomBookingForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bgPanel;
    private javax.swing.JButton btnBook;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnPreview;
    private javax.swing.JButton btnReturnAvailableRoom;
    private javax.swing.JTextArea inpRemarks;
    private com.toedter.calendar.JDateChooser iptCheckInDate;
    private com.toedter.calendar.JDateChooser iptCheckOutDate;
    private javax.swing.JTextField iptContactNumber;
    private javax.swing.JTextField iptDOS;
    private javax.swing.JTextField iptEmailAddress;
    private javax.swing.JTextField iptGuestName;
    private javax.swing.JComboBox<String> iptIdentidyCardType;
    private javax.swing.JTextField iptIdentityNumber;
    private javax.swing.JTextField iptPricePerNight;
    private javax.swing.JScrollPane iptRemarksPanel;
    private javax.swing.JTextField iptRoomNumber;
    private javax.swing.JTextField iptServiceTax;
    private javax.swing.JTextField iptTotalPrice;
    private javax.swing.JTextField iptTourismTax;
    private javax.swing.JLabel lblBookingDetails;
    private javax.swing.JLabel lblCheckIn;
    private javax.swing.JLabel lblCheckOut;
    private javax.swing.JLabel lblContactNumber;
    private javax.swing.JLabel lblCustomerDetail;
    private javax.swing.JLabel lblCustomerIC;
    private javax.swing.JLabel lblCustomerIDType;
    private javax.swing.JLabel lblCustomerName;
    private javax.swing.JLabel lblDOS;
    private javax.swing.JLabel lblEmailAddress;
    private javax.swing.JLabel lblPaymentPreview;
    private javax.swing.JLabel lblPricePerNight;
    private javax.swing.JLabel lblRemarks;
    private javax.swing.JLabel lblRoomNumber;
    private javax.swing.JLabel lblSeviceTax;
    private javax.swing.JLabel lblTotalPrice;
    private javax.swing.JLabel lblTourismTax;
    // End of variables declaration//GEN-END:variables
}
